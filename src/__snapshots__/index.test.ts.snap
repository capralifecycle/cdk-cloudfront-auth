// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A simple example 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61ArtifactHash18484B07": Object {
      "Description": "Artifact hash for asset \\"17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61\\"",
      "Type": "String",
    },
    "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61S3Bucket1C7E84EA": Object {
      "Description": "S3 bucket for asset \\"17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61\\"",
      "Type": "String",
    },
    "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61S3VersionKey6701388A": Object {
      "Description": "S3 key for asset version \\"17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61\\"",
      "Type": "String",
    },
    "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6ArtifactHash6A98E8EE": Object {
      "Description": "Artifact hash for asset \\"520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6\\"",
      "Type": "String",
    },
    "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6S3BucketC8B20BFB": Object {
      "Description": "S3 bucket for asset \\"520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6\\"",
      "Type": "String",
    },
    "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6S3VersionKey3BBD228D": Object {
      "Description": "S3 key for asset version \\"520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6\\"",
      "Type": "String",
    },
    "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfArtifactHash44B9B1B0": Object {
      "Description": "Artifact hash for asset \\"965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cf\\"",
      "Type": "String",
    },
    "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfS3Bucket5313743F": Object {
      "Description": "S3 bucket for asset \\"965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cf\\"",
      "Type": "String",
    },
    "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfS3VersionKey203F2FD9": Object {
      "Description": "S3 key for asset version \\"965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cf\\"",
      "Type": "String",
    },
    "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33ArtifactHash47A0B1BC": Object {
      "Description": "Artifact hash for asset \\"c812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33\\"",
      "Type": "String",
    },
    "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33S3Bucket15C5EDC4": Object {
      "Description": "S3 bucket for asset \\"c812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33\\"",
      "Type": "String",
    },
    "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33S3VersionKeyF222AD99": Object {
      "Description": "S3 key for asset version \\"c812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33\\"",
      "Type": "String",
    },
    "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448ArtifactHashA3326398": Object {
      "Description": "Artifact hash for asset \\"d13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448\\"",
      "Type": "String",
    },
    "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448S3Bucket96DAB899": Object {
      "Description": "S3 bucket for asset \\"d13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448\\"",
      "Type": "String",
    },
    "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448S3VersionKeyCF6B2094": Object {
      "Description": "S3 key for asset version \\"d13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccArtifactHashA58B31E8": Object {
      "Description": "Artifact hash for asset \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4": Object {
      "Description": "S3 bucket for asset \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42": Object {
      "Description": "S3 key for asset version \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthLambdasCheckAuthFunction6B3C9473": Object {
      "DependsOn": Array [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61S3Bucket1C7E84EA",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61S3VersionKey6701388A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters17084f874da701e157d397b60650e858e493894f9935100c6ce3e05807e82e61S3VersionKey6701388A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D62550e5844dd4c6509a670786719916cd8": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AuthLambdasCheckAuthFunction6B3C9473",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasCheckAuthFunctionVersionParamParameuwest1Resoure8ACD3434": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D62550e5844dd4c6509a670786719916cd8",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "Delete": Object {
          "action": "deleteParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D62550e5844dd4c6509a670786719916cd8",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasHttpHeadersFunctionC7A2BAB9": Object {
      "DependsOn": Array [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33S3Bucket15C5EDC4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33S3VersionKeyF222AD99",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc812e7e183b99ac5b439571a47de50b7bfc3b04c3bff3598a13d9c3647ffdb33S3VersionKeyF222AD99",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2Edda46baeb342a3f2a6edf25b2d645540": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AuthLambdasHttpHeadersFunctionC7A2BAB9",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasHttpHeadersFunctionVersionParamParameuwest1Resoure0C3C81F2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2Edda46baeb342a3f2a6edf25b2d645540",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "Delete": Object {
          "action": "deleteParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2Edda46baeb342a3f2a6edf25b2d645540",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasParseAuthFunctionC04A121B": Object {
      "DependsOn": Array [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfS3Bucket5313743F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfS3VersionKey203F2FD9",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters965ce1e2fceab7f7b0908668f1cd8fc04977556436588a1d29c8883978b592cfS3VersionKey203F2FD9",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasParseAuthFunctionCurrentVersionA32A5991bd1c483e63e6719324e6540da5aecb5a": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AuthLambdasParseAuthFunctionC04A121B",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasParseAuthFunctionVersionParamParameuwest1Resoure934661C6": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasParseAuthFunctionCurrentVersionA32A5991bd1c483e63e6719324e6540da5aecb5a",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "Delete": Object {
          "action": "deleteParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasParseAuthFunctionCurrentVersionA32A5991bd1c483e63e6719324e6540da5aecb5a",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasRefreshAuthFunction4B0B3BD6": Object {
      "DependsOn": Array [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448S3Bucket96DAB899",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448S3VersionKeyCF6B2094",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd13f83426c7feb6174e882bd63ac2bfa8129f3afa923058f85251b1c16843448S3VersionKeyCF6B2094",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasRefreshAuthFunctionCurrentVersion632285F62763db37644c055eafb621488bb2b1bc": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AuthLambdasRefreshAuthFunction4B0B3BD6",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasRefreshAuthFunctionVersionParamParameuwest1Resoure0C0D8913": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasRefreshAuthFunctionCurrentVersion632285F62763db37644c055eafb621488bb2b1bc",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "Delete": Object {
          "action": "deleteParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasRefreshAuthFunctionCurrentVersion632285F62763db37644c055eafb621488bb2b1bc",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasServiceRoleF10A0667": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "lambda.amazonaws.com",
                  "edgelambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthLambdasSignOutFunction251863E4": Object {
      "DependsOn": Array [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6S3BucketC8B20BFB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6S3VersionKey3BBD228D",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters520ae594ddd12db8b87f816db9eaabdfeb2d02eb1077041ab14751804b656be6S3VersionKey3BBD228D",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasSignOutFunctionCurrentVersion0576BBB18c7d265d34f735e7cf71d6dea919228b": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "AuthLambdasSignOutFunction251863E4",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasSignOutFunctionVersionParamParameuwest1Resoure18583D2D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasSignOutFunctionCurrentVersion0576BBB18c7d265d34f735e7cf71d6dea919228b",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "Delete": Object {
          "action": "deleteParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "putParameter",
          "parameters": Object {
            "Name": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
            "Overwrite": "TRUE:BOOLEAN",
            "Type": "String",
            "Value": Object {
              "Ref": "AuthLambdasSignOutFunctionCurrentVersion0576BBB18c7d265d34f735e7cf71d6dea919228b",
            },
          },
          "physicalResourceId": Object {
            "id": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
          },
          "region": "eu-west-1",
          "service": "SSM",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;

exports[`A simple example 2`] = `
Object {
  "Parameters": Object {
    "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aArtifactHashDBEBE58E": Object {
      "Description": "Artifact hash for asset \\"28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0a\\"",
      "Type": "String",
    },
    "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aS3Bucket64A684F0": Object {
      "Description": "S3 bucket for asset \\"28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0a\\"",
      "Type": "String",
    },
    "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aS3VersionKeyA9DEDB58": Object {
      "Description": "S3 key for asset version \\"28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0a\\"",
      "Type": "String",
    },
    "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909ArtifactHashFBE179D1": Object {
      "Description": "Artifact hash for asset \\"a01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909\\"",
      "Type": "String",
    },
    "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909S3Bucket890F81D3": Object {
      "Description": "S3 bucket for asset \\"a01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909\\"",
      "Type": "String",
    },
    "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909S3VersionKey268FBFBF": Object {
      "Description": "S3 key for asset version \\"a01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909\\"",
      "Type": "String",
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affArtifactHash3453F7BF": Object {
      "Description": "Artifact hash for asset \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E": Object {
      "Description": "S3 bucket for asset \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8": Object {
      "Description": "S3 key for asset version \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccArtifactHashA58B31E8": Object {
      "Description": "Artifact hash for asset \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4": Object {
      "Description": "S3 bucket for asset \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42": Object {
      "Description": "S3 key for asset version \\"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\\"",
      "Type": "String",
    },
    "AuthCheckAuthFnImportNonceB0C38324": Object {
      "Default": "snapshot",
      "Type": "String",
    },
    "AuthHttpHeadersFnImportNonceEA60F8FB": Object {
      "Default": "snapshot",
      "Type": "String",
    },
    "AuthParseAuthFnImportNonceDB90BFAF": Object {
      "Default": "snapshot",
      "Type": "String",
    },
    "AuthRefreshAuthFnImportNonce259C9C85": Object {
      "Default": "snapshot",
      "Type": "String",
    },
    "AuthSignOutFnImportNonce71DBA4CA": Object {
      "Default": "snapshot",
      "Type": "String",
    },
    "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-CheckAuthFunction-function-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-HttpHeadersFunction-function-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-ParseAuthFunction-function-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-RefreshAuthFunction-function-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/cf/region/us-east-1/stack/Stack1/Stack1AuthLambdas3691AB43-SignOutFunction-function-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "UserPool6BA7E5F2",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "cognito-idp:UpdateUserPoolClient",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "UserPool6BA7E5F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthCheckAuthFnC12AAE69": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "callbackPath": "/auth/callback",
          "clientId": Object {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": Object {
            "Fn::GetAtt": Array [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": Object {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": Object {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": Object {
            "Fn::GetAtt": Array [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": Array [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": null,
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": Object {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": Object {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthClientSecret768E9C19": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "describeUserPoolClient",
          "parameters": Object {
            "ClientId": Object {
              "Ref": "UserPoolUserPoolClient40176907",
            },
            "UserPoolId": Object {
              "Ref": "UserPool6BA7E5F2",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "UserPool6BA7E5F2",
                  },
                  "-",
                  Object {
                    "Ref": "UserPoolUserPoolClient40176907",
                  },
                ],
              ],
            },
          },
          "service": "CognitoIdentityServiceProvider",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "describeUserPoolClient",
          "parameters": Object {
            "ClientId": Object {
              "Ref": "UserPoolUserPoolClient40176907",
            },
            "UserPoolId": Object {
              "Ref": "UserPool6BA7E5F2",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "UserPool6BA7E5F2",
                  },
                  "-",
                  Object {
                    "Ref": "UserPoolUserPoolClient40176907",
                  },
                ],
              ],
            },
          },
          "service": "CognitoIdentityServiceProvider",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthClientUpdate3823E358": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Create": Object {
          "action": "updateUserPoolClient",
          "parameters": Object {
            "AllowedOAuthFlows": Array [
              "code",
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "AllowedOAuthScopes": Array [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin",
            ],
            "CallbackURLs": Array [
              Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "https://",
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudFrontDistributionCFDistribution599ADCC4",
                        "DomainName",
                      ],
                    },
                    "/auth/callback",
                  ],
                ],
              },
            ],
            "ClientId": Object {
              "Ref": "UserPoolUserPoolClient40176907",
            },
            "LogoutURLs": Array [
              Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "https://",
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudFrontDistributionCFDistribution599ADCC4",
                        "DomainName",
                      ],
                    },
                    "/",
                  ],
                ],
              },
            ],
            "SupportedIdentityProviders": Array [
              "COGNITO",
            ],
            "UserPoolId": Object {
              "Ref": "UserPool6BA7E5F2",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "UserPool6BA7E5F2",
                  },
                  "-",
                  Object {
                    "Ref": "UserPoolUserPoolClient40176907",
                  },
                ],
              ],
            },
          },
          "service": "CognitoIdentityServiceProvider",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "action": "updateUserPoolClient",
          "parameters": Object {
            "AllowedOAuthFlows": Array [
              "code",
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "AllowedOAuthScopes": Array [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin",
            ],
            "CallbackURLs": Array [
              Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "https://",
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudFrontDistributionCFDistribution599ADCC4",
                        "DomainName",
                      ],
                    },
                    "/auth/callback",
                  ],
                ],
              },
            ],
            "ClientId": Object {
              "Ref": "UserPoolUserPoolClient40176907",
            },
            "LogoutURLs": Array [
              Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "https://",
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudFrontDistributionCFDistribution599ADCC4",
                        "DomainName",
                      ],
                    },
                    "/",
                  ],
                ],
              },
            ],
            "SupportedIdentityProviders": Array [
              "COGNITO",
            ],
            "UserPoolId": Object {
              "Ref": "UserPool6BA7E5F2",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "UserPool6BA7E5F2",
                  },
                  "-",
                  Object {
                    "Ref": "UserPoolUserPoolClient40176907",
                  },
                ],
              ],
            },
          },
          "service": "CognitoIdentityServiceProvider",
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthHttpHeadersFn7D541668": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "callbackPath": "/auth/callback",
          "clientId": Object {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": Object {
            "Fn::GetAtt": Array [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": Object {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": Object {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": Object {
            "Fn::GetAtt": Array [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": Array [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": null,
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": Object {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": Object {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthNonceSigningSecretC47F85D8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthParseAuthFn975D8094": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "callbackPath": "/auth/callback",
          "clientId": Object {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": Object {
            "Fn::GetAtt": Array [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": Object {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": Object {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": Object {
            "Fn::GetAtt": Array [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": Array [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": null,
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": Object {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": Object {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthRefreshAuthFnEA5CBBAE": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "callbackPath": "/auth/callback",
          "clientId": Object {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": Object {
            "Fn::GetAtt": Array [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": Object {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": Object {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": Object {
            "Fn::GetAtt": Array [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": Array [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": null,
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": Object {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": Object {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthSignOutFnD060B75E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "callbackPath": "/auth/callback",
          "clientId": Object {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": Object {
            "Fn::GetAtt": Array [
              "AuthClientSecret768E9C19",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": Object {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": Object {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": Object {
            "Fn::GetAtt": Array [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": Array [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": null,
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": Object {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": Object {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1Stack1AuthLambdas3691AB43SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudFrontDistributionCFDistribution599ADCC4": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": Object {
                    "Fn::GetAtt": Array [
                      "AuthParseAuthFn975D8094",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/callback",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": Object {
                    "Fn::GetAtt": Array [
                      "AuthRefreshAuthFnEA5CBBAE",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/refresh",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": Object {
                    "Fn::GetAtt": Array [
                      "AuthSignOutFnD060B75E",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/sign-out",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "viewer-request",
                "LambdaFunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "AuthCheckAuthFnC12AAE69",
                    "FunctionArn",
                  ],
                },
              },
              Object {
                "EventType": "origin-response",
                "LambdaFunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "AuthHttpHeadersFn7D541668",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "Bucket83908E77",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {},
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "UserPool6BA7E5F2": Object {
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsConfiguration": Object {
          "ExternalId": "Stack2UserPool9C0D64B3",
          "SnsCallerArn": Object {
            "Fn::GetAtt": Array [
              "UserPoolsmsRole4EA729DD",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
    },
    "UserPoolUserPoolClient40176907": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ExplicitAuthFlows": Array [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "UserPoolsmsRole4EA729DD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "StringEquals": Object {
                  "sts:ExternalId": "Stack2UserPool9C0D64B3",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99": Object {
      "DependsOn": Array [
        "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aS3Bucket64A684F0",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aS3VersionKeyA9DEDB58",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters28540eee7844539b114f0bf6a83f5bf4b8d75ca6f0148b6ef1910b8be98bcc0aS3VersionKeyA9DEDB58",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326": Object {
      "DependsOn": Array [
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (Stack2/henrist.cloudfront-auth.generate-secret.provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "Roles": Array [
          Object {
            "Ref": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4": Object {
      "DependsOn": Array [
        "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (Stack2/henrist.lambda-config.provider/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "Roles": Array [
          Object {
            "Ref": "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "henristlambdaconfigproviderUpdateCodeFnBF8DF66B": Object {
      "DependsOn": Array [
        "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909S3Bucket890F81D3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909S3VersionKey268FBFBF",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa01cec960b58c5d4ab37f849b1af75bf2d04efe9541f332a4e67aefb46252909S3VersionKey268FBFBF",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "lambda:GetFunction",
                "lambda:UpdateFunctionCode",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "Roles": Array [
          Object {
            "Ref": "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
